-- MATERIALIZED VIEW creation

DROP MATERIALIZED VIEW IF EXISTS dwh.craft_market_materialized_view;

CREATE MATERIALIZED VIEW dwh.orders_report_materialized_view
AS
SELECT 
    SUM(T1.product_price) AS total_money, -- сумма денег по всем заказам
    COUNT(T1.product_id) AS total_products, -- количество заказанных товаров
    AVG(T1.craftsman_age) AS avg_age_craftsman, -- средний возраст мастера
    AVG(T1.customer_age) AS avg_age_customer, -- средний возраст заказчика
    SUM(CASE WHEN T1.order_status = 'created' THEN 1 ELSE 0 END) AS count_order_created,
    SUM(CASE WHEN T1.order_status = 'in progress' THEN 1 ELSE 0 END) AS count_order_in_progress, 
    SUM(CASE WHEN T1.order_status = 'delivery' THEN 1 ELSE 0 END) AS count_order_delivery, 
    SUM(CASE WHEN T1.order_status = 'done' THEN 1 ELSE 0 END) AS count_order_done, 
    SUM(CASE WHEN T1.order_status != 'done' THEN 1 ELSE 0 END) AS count_order_not_done,
    AVG(T2.diff_order_date) AS avg_days_complete_orders, -- среднее количество дней на выполнение заказа
    PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY T2.diff_order_date) AS median_days_complete_orders, -- медианное количество дней на выполнение заказа
    T1.report_period AS report_period -- отчётный месяц
FROM (
    SELECT 
        fo.order_id AS order_id, -- идентификатор заказа
        dp.product_id AS product_id,
        fo.order_completion_date AS order_completion_date, -- дата исполнения заказа
        fo.order_created_date AS order_created_date, -- дата создания заказа
        dp.product_price AS product_price, -- цена товара
        dp.product_name AS product_name, -- название товара
        fo.order_status AS order_status, -- статус выполнения заказа
        TO_CHAR(fo.order_created_date, 'yyyy-mm') AS report_period, -- год и месяц, по которому будет происходить группировка
        DATE_PART('year', AGE(dc.craftsman_birthday)) AS craftsman_age, -- возраст мастера
        DATE_PART('year', AGE(dcs.customer_birthday)) AS customer_age -- возраст заказчика
    FROM dwh.f_order fo
    INNER JOIN dwh.d_craftsman dc ON dc.craftsman_id = fo.craftsman_id
    INNER JOIN dwh.d_customer dcs ON dcs.customer_id = fo.customer_id
    INNER JOIN dwh.d_product dp ON dp.product_id = fo.product_id
) AS T1
LEFT JOIN (
    SELECT 
        inner_fo.order_id, -- идентификатор заказа, чтобы выполнить join с таблицей T1
        inner_fo.order_completion_date - inner_fo.order_created_date AS diff_order_date -- количество дней от момента создания заказа до его выполнения
    FROM dwh.f_order inner_fo
    WHERE inner_fo.order_status = 'done' AND inner_fo.order_completion_date IS NOT NULL -- из списка всех заказов берём только те, которые завершились и у которых есть дата завершения заказа, чтобы избежать неполных данных в записях
) AS T2 ON T1.order_id = T2.order_id
GROUP BY T1.report_period -- группируем по месяцам итоговую таблицу
ORDER BY total_money; -- сортируем по сумме денег